{"version":3,"file":"component---src-pages-markdown-remark-fields-slug-jsx-5d638ea2638e8abc8ee1.js","mappings":"0MAwBA,MAdaA,IAAuB,IAAtB,eAACC,GAAeD,EAC1B,MAAM,OAACE,EAAM,KAAEC,GAAQF,EAGvB,OACIG,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,UAAKF,EAAOG,OACZD,EAAAA,cAAA,OACIE,wBAAyB,CAACC,OAAQJ,KAEvC,ECfI,SAASK,EAAgBR,GAEK,IAFJ,KACIS,GACHT,EACtC,MAAM,eAACC,GAAkBQ,GACnB,OAACP,GAAUD,EAEjB,OACIG,EAAAA,cAACM,EAAAA,EAAM,CAACC,SAAUT,EAAOS,UACrBP,EAAAA,cAACQ,EAAI,CAACX,eAAgBA,IAGlC,C","sources":["webpack://gatsby-starter-default/./src/components/page.js","webpack://gatsby-starter-default/./src/pages/{markdownRemark.fields__slug}.jsx"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport \"./layout.css\"\n\nconst Page = ({markdownRemark}) => {\n    const {fields, html} = markdownRemark\n\n    // The title in the html is a bit awkward. The wiki shows it, so we have to show it too, or pages look like they have no title. But if pages set an h1 element themselves, it looks stupid\n    return (\n        <>\n            <h1>{fields.title}</h1>\n            <div\n                dangerouslySetInnerHTML={{__html: html}}\n            />\n        </>\n    )\n}\n\nexport default Page\n","import * as React from \"react\"\nimport {graphql} from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Page from \"../components/page\"\n\nexport default function DocsPageTemplate({\n                                             data, // this prop will be injected by the GraphQL query below.\n                                         }) {\n    const {markdownRemark} = data // data.markdownRemark holds your post data\n    const {fields} = markdownRemark\n\n    return (\n        <Layout pageName={fields.pageName}>\n            <Page markdownRemark={markdownRemark}/>\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      fields {\n        slug\n        title\n        pageName\n     }\n    }\n  }\n  `"],"names":["_ref","markdownRemark","fields","html","React","title","dangerouslySetInnerHTML","__html","DocsPageTemplate","data","Layout","pageName","Page"],"sourceRoot":""}